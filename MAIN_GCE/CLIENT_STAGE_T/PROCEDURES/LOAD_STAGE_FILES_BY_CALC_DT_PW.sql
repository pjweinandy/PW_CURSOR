CREATE OR REPLACE PROCEDURE DEMO_REP.CLIENT_STAGE_T.LOAD_STAGE_FILES_BY_CALC_DT_PW("V_CALC_DT" DATE, "V_STAGE_NAME" VARCHAR, V_RELOAD BOOLEAN)
RETURNS VARCHAR
LANGUAGE SQL
EXECUTE AS CALLER
AS '
DECLARE

    V_MONTH_PATH STRING := (SELECT REPLACE(TO_VARCHAR(:V_CALC_DT, ''YYYY-MM''), ''-'', ''_''));
    V_DT_PATH STRING := (SELECT REPLACE(TO_VARCHAR(:V_CALC_DT, ''YYYY-MM-DD''), ''-'', ''_''));
    V_BASE_NAME STRING;
    V_FILE_NAME STRING;
    V_STAGE_PATH STRING;
    V_STAGE_PATH_WITH_FILE STRING;
    STAGE_LIST_RES RESULTSET;

    V_RESULT_VAR STRING;
    V_FULL_RESULT STRING;
    
BEGIN

    V_STAGE_PATH := :V_STAGE_NAME || ''/'' || :V_MONTH_PATH || ''/'' || :V_DT_PATH ;
    
    EXECUTE IMMEDIATE ''LIST '' || :V_STAGE_PATH ;

    STAGE_LIST_RES := (SELECT "name" FROM TABLE(RESULT_SCAN(LAST_QUERY_ID())));

    FOR stage IN STAGE_LIST_RES DO

        V_FILE_NAME := stage."name";
        
        V_FILE_NAME := (SELECT SPLIT_PART(:V_FILE_NAME,''/'',-1));
   
        V_STAGE_PATH_WITH_FILE := :V_STAGE_PATH || ''/'' || :V_FILE_NAME;

        --REMOVE PATH AND SUFFIX
        V_BASE_NAME := (SELECT UPPER(REGEXP_REPLACE(SPLIT_PART(:V_FILE_NAME,''.'',1), ''_[0-9]{8}*$'', '''')));

        --IF RELOAD NOT TRUE AND WE ALREADY HAVE THE FILE LOADED THEN SKIP--
        IF ((NOT :V_RELOAD) AND (EXISTS (
            SELECT 1 FROM CONFIG_ALL.STAGE_FILE_TABLE_MAPPING_PW
            WHERE CALC_DT = :V_CALC_DT
            AND BASE_NAME = :V_BASE_NAME
            AND RAW_LOADED = TRUE
            AND HIST_LOADED = TRUE
            )))
        THEN 
            CONTINUE; --SKIP             
        END IF;

        --LOAD TO RAW
        CALL CLIENT_STAGE_T.LOAD_STAGE_FILES_INTO_RAW(:V_STAGE_PATH_WITH_FILE, :V_BASE_NAME, :V_CALC_DT) INTO :V_RESULT_VAR;
        
        V_FULL_RESULT := :V_FULL_RESULT || ''\\n'' || :V_RESULT_VAR;

        --RAW TO HIST
        CALL DEMO_REP.CLIENT_STAGE_T.LOAD_RAW_INTO_HIST(:V_BASE_NAME, :V_CALC_DT);

        
        
    END FOR; 

RETURN V_FULL_RESULT;
    
END;
';
